'use strict';

const EdmTypeFactory = require('./EdmTypeFactory');
const EdmAnnotation = require('./EdmAnnotation');
const validateThat = require('../validator/ParameterValidator').validateThat;

/**
 * <a href="./../ODataSpecification/odata-v4.0-errata03-os/complete/part3-csdl/odata-v4.0-errata03-os-part3-csdl-complete.html#_Toc453752588">
 *      OData CSDL # 12.3 Element edm:ReturnType
 * </a>
 * @hideconstructor
 */
class EdmReturnType {

    /**
     * @param {Edm} edm The edm itself
     * @param {CsdlReturnType} returnType
     */
    constructor(edm, returnType) {
        validateThat('edm', edm).truthy();
        validateThat('returnType', returnType).truthy();

        this._edm = edm;

        /**
         * @type {CsdlReturnType}
         * @private
         */
        this._returnType = returnType;

        /**
         * @type {EdmType}
         * @private
         */
        this._type = null;

        /**
         * @type {EdmAnnotation[]}
         * @private
         */
        this._annotations = null;

    }

    /**
     * Returns true if this return type is a collection, false otherwise.
     *
     * @returns {boolean}
     */
    isCollection() {
        return this._returnType.isCollection;
    }

    /**
     * Returns true if this return type is nullable, false otherwise.
     *
     * @returns {boolean}
     */
    isNullable() {
        return this._returnType.isNullable;
    }

    /**
     * Returns the max length
     *
     * @returns {number|string}
     */
    getMaxLength() {
        return this._returnType.maxLength;
    }

    /**
     * Returns the precision
     *
     * @returns {number|string}
     */
    getPrecision() {
        return this._returnType.precision;
    }

    /**
     * Returns the scale
     *
     * @returns {number}
     */
    getScale() {
        return this._returnType.scale;
    }

    /**
     * Returns the srid
     *
     * @returns {string}
     */
    getSrid() {
        return this._returnType.srid;
    }

    /**
     * Returns the EDM type of this return type.
     *
     * @returns {EdmType}
     */
    getType() {
        if (!this._type) {
            this._type = EdmTypeFactory.createTypeFromFQN(this._edm, this._returnType.type);
        }
        return this._type;
    }

    /**
     * Returns the annotations for this return type.
     *
     * @returns {EdmAnnotation[]}
     */
    getAnnotations() {
        if (!this._annotations) {
            this._annotations = this._returnType.annotations.map(item => new EdmAnnotation(this._edm, item));
        }
        return this._annotations;
    }
}

module.exports = EdmReturnType;
