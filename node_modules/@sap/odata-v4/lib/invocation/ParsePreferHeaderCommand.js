'use strict';

const Command = require('./Command');
const HttpHeader = require('../http/HttpHeader');

/**
 * Executes the parsing and validation of the prefer header.
 *
 * @extends Command
 */
class ParsePreferHeaderCommand extends Command {

    /**
     * Creates an instance of ParsePreferHeaderCommand.
     *
     * @param {Context} context The current odata context
     * @param {RequestValidator} requestValidator The current request validator
     */
    constructor(context, requestValidator) {
        super(context);
        this._requestValidator = requestValidator;
    }

    /**
     * Executes the parsing and validation of the prefer header.
     *
     * @param {Next} next The next callback to be called on finish
     */
    execute(next) {
        const context = this.getContext();
        const logger = context.getLogger();
        logger.path('Entering ParsePreferHeaderCommand.execute()...');
        const request = this.getContext().getRequest();

        const preferHeader = request.getHeader(HttpHeader.HeaderNames.PREFER);
        if (preferHeader) {
            const preferences = HttpHeader.parsePreferHeader(preferHeader);
            request.setPreferences(preferences);
            logger.debug('Prefer header parsing result: ', preferences);

            this._requestValidator.validatePreferences(request.getPreferences(), request.getMethod(),
                request.getUriInfo().getPathSegments());
        }

        next();
    }
}

module.exports = ParsePreferHeaderCommand;
