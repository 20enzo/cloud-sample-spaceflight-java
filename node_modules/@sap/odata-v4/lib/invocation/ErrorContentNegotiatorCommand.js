'use strict';

const ContentNegotiatorCommand = require('./ContentNegotiatorCommand');
const ContentTypes = require('../format/ContentTypeInfo').ContentTypes;
const RepresentationKinds = require('../format/RepresentationKind').Kinds;

/**
 * The `next` callback to be called upon finish execution.
 *
 * @callback Next
 * @param {?Error} error An error if there is one or null if not
 */

/**
 * Executes the content negotiation in case of an error.
 *
 * @extends ContentNegotiatorCommand
 */
class ErrorContentNegotiatorCommand extends ContentNegotiatorCommand {

    /**
     * Creates an instance of ErrorContentNegotiatorCommand.
     *
     * @param {Context} content The current odata context
     * @param {FormatManager} formatManager The current instance of format manager
     * @param {ResponseContentNegotiator} contentNegotiator The current instance of ResponseContentNegotiator
     */
    constructor(context, formatManager, contentNegotiator) {
        super(context, formatManager, contentNegotiator);
    }

    /**
     * Executes the content negotiation in error mode. The content negotiation creates a `ResponseContract` object
     * as a result with all necessary content negotiation information. The contract object is
     * attached to the odata context instance.
     *
     * @param {Next} next The next callback to be called on finish
     */
    execute(next) {
        const logger = this.getContext().getLogger();
        logger.path('Entering ErrorContentNegotiatorCommand.execute()...');

        const formatManager = super.getFormatManager();
        const negotiator = super.getNegotiator();
        let contract = null;
        try {
            logger.debug('Try to execute default content type negotiation...');
            contract = negotiator.negotiate(formatManager, super.getContext().getRequest());
        } catch (error) {
            logger.debug('... Error content type negotiation failed');
            logger.debug(`Execute content type negotation for '${ContentTypes.JSON}'`);
            contract = negotiator.negotiateContentType(formatManager, RepresentationKinds.ERROR, ContentTypes.JSON);
        }
        logger.debug('Response contract contentTypeInfo: ', contract.getContentTypeInfo());
        super.getContext().getResponse().setContract(contract);
        next();
    }
}

module.exports = ErrorContentNegotiatorCommand;
