'use strict';

const Command = require('./Command');
const InternalServerError = require('./../errors/InternalServerError');

/**
 * Executes the response to the client with the provided data.
 *
 * @extends Command
 */
class SendResponseCommand extends Command {

    /**
     * Creates an instance of the SendResponseCommand.
     *
     * @param {Context} context The current odata context instance
     */
    constructor(context) {
        super(context);
    }

    /**
     * Sends the response.
     * @param {Next} next The next callback to be called on finish
     */
    execute(next) {
        const context = this.getContext();
        const logger = context.getLogger();

        logger.path('Entering SendResponseCommand.execute()...');

        const response = context.getResponse();

        if (response.isHeadersSent() === true && response.getBody() != null) {
            throw new InternalServerError(
                'Response data was already send while there is still data available in response buffer'
            );
        }

        response.end(response.getBody());

        next();
    }
}

module.exports = SendResponseCommand;
