'use strict';

const SemanticOdataUriBuilder = require('../../../lib/uri/builder/SemanticOdataUriBuilder');
const assert = require('assert');

describe(__filename, () => {

    describe('should test class SemanticOdataUriBuilder', () => {

        describe('should test getter', () => {

            it('should test getOdataVersion()', () => {
                const builder = new SemanticOdataUriBuilder({ getOdataVersion: () => '4.0' });
                assert.strictEqual(builder.getOdataVersion(), '4.0');
            });

            it('should test getEdm()', () => {
                const builder = new SemanticOdataUriBuilder({ getEdm: () => 'edm' });
                assert.strictEqual(builder.getEdm(), 'edm');
            });

            it('should test getRequestRepresentationKind()', () => {
                const builder = new SemanticOdataUriBuilder({ getRequestRepresentationKind: () => 'test' });
                assert.strictEqual(builder.getRequestRepresentationKind(), 'test');
            });

            it('should test getResponseRepresentationKind()', () => {
                const builder = new SemanticOdataUriBuilder({ getResponseRepresentationKind: () => 'test' });
                assert.strictEqual(builder.getResponseRepresentationKind(), 'test');
            });

            it('should test getRequestEdmType()', () => {
                const builder = new SemanticOdataUriBuilder({ getRequestEdmType: () => 'test' });
                assert.strictEqual(builder.getRequestEdmType(), 'test');
            });

            it('should test getResponseEdmType()', () => {
                const builder = new SemanticOdataUriBuilder({ getResponseEdmType: () => 'test' });
                assert.strictEqual(builder.getResponseEdmType(), 'test');
            });

        });
    });
});
