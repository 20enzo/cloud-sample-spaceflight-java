'use strict';

/**
 * @abstract
 */
class AbstractReturnTypeHelper {

    /**
     * @abstract
     * @param {SegmentInfo[]} pathSegments The path segments of the Uri
     * @param {HttpMethod.Methods} httpMethod The http method of the request
     * @returns {RepresentationKind.Kinds} The RepresentationKind od the requests response, if executed successfully
     */
    // eslint-disable-next-line no-unused-vars
    getResponseRepresentationKind(pathSegments, httpMethod) {
    }

    /**
     * @abstract
     * @param {SegmentInfo[]} pathSegments The path segments of the Uri
     * @param {HttpMethod.Methods} httpMethod The http method of the request
     * @returns {RepresentationKind.Kinds} The RepresentationKind od the requests response, if executed successfully
     */
    // eslint-disable-next-line no-unused-vars
    getRequestRepresentationKind(pathSegments, httpMethod) {
    }

    /**
     * @param {SegmentInfo[]} pathSegments
     * @return {EdmType}
     */
    getFinalEdmType(pathSegments) {
        let finalEdmType = this.getFinalEdmArtifact(pathSegments);
        finalEdmType = (finalEdmType && finalEdmType.getType) ? finalEdmType.getType() : finalEdmType;
        return finalEdmType;
    }

    /**
     * @param pathSegments
     * @return {EdmType|EdmProperty}
     */
    getFinalEdmArtifact(pathSegments) {
        return pathSegments[pathSegments.length - 1].getEdmType()
            || (pathSegments.length > 1 ? pathSegments[pathSegments.length - 2].getEdmType() : null);
    }
}

module.exports = AbstractReturnTypeHelper;
