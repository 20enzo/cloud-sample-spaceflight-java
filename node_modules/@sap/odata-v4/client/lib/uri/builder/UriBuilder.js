'use strict';

const ODataV2Encoder = require('./ODataV2Encoder');
const ODataV4Encoder = require('./ODataV4Encoder');
const ODataV2UriPartBuilder = require('./ODataV2UriPartBuilder');
const ODataV4UriPartBuilder = require('./ODataV4UriPartBuilder');
const ODataV2ReturnTypeHelper = require('./ODataV2ReturnTypeHelper');
const ODataV4ReturnTypeHelper = require('./ODataV4ReturnTypeHelper');
const HttpUriBuilder = require('./HttpUriBuilder');
const ODataUriBuilder = require('./ODataUriBuilder');
const ODataV2UriBuilder = require('./ODataV2UriBuilder');
const ODataV4UriBuilder = require('./ODataV4UriBuilder');
const EdmValidator = require('./EdmValidator');
const EdmProvider = require('../../../../lib/provider/EdmProvider');
const CsdlJsonProvider = require('../../../../lib/provider/CsdlJsonProvider');


class UriBuilder {

    /**
     * @param {EdmProvider|object} edm
     */
    constructor(edm) {
        /**
         * @type {EdmProvider}
         * @private
         */
        this._edm = edm ? UriBuilder.createEdmProvider(edm) : null;
    }

    v2() {
        const httpUriBuilder = new HttpUriBuilder();
        const odataUriBuilder = new ODataUriBuilder(httpUriBuilder);
        odataUriBuilder.setEncoder(new ODataV2Encoder());
        odataUriBuilder.setPartBuilder(new ODataV2UriPartBuilder());
        if (this._edm) {
            odataUriBuilder.setValidator(new EdmValidator(this._edm));
            odataUriBuilder.setReturnTypeHelper(new ODataV2ReturnTypeHelper());
        }
        odataUriBuilder.setEdm(this._edm || null);
        odataUriBuilder.setOdataVersion('2.0');
        return new ODataV2UriBuilder(odataUriBuilder);
    }


    /**
     * @param {Object|EdmProvider} edm Either the edmJson or the instantiated edmProvider
     * @return {ODataV4UriBuilder}
     */
    v4() {
        const httpUriBuilder = new HttpUriBuilder();
        const odataUriBuilder = new ODataUriBuilder(httpUriBuilder);
        odataUriBuilder.setEncoder(new ODataV4Encoder());
        odataUriBuilder.setPartBuilder(new ODataV4UriPartBuilder);
        if (this._edm) {
            odataUriBuilder.setValidator(new EdmValidator(this._edm));
            odataUriBuilder.setReturnTypeHelper(new ODataV4ReturnTypeHelper());
        }
        odataUriBuilder.setEdm(this._edm || null);
        odataUriBuilder.setOdataVersion('4.0');
        return new ODataV4UriBuilder(odataUriBuilder);
    }

    /**
     * @param {Object|EdmProvider} edm Either the edmJson or the instantiated edmProvider
     * @return {EdmProvider}
     * @private
     */
    static createEdmProvider(edm) {
        return (edm instanceof EdmProvider) ? edm : new EdmProvider(new CsdlJsonProvider(edm), {});
    }
}

module.exports = UriBuilder;
