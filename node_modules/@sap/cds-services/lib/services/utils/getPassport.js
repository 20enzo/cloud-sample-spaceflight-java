const {FeatureNotSupported, getError} = require('../../errors')

const getBasicAuthHandler = (credentials) => {
  return (user, password, done) => {
    if (credentials[user] === password) {
      return done(null, {id: user})
    }

    return done(getError(401))
  }
}

const getPassport = (options) => {
  const passport = require('passport')
  if (options.passport.strategy === 'basic') {
    const {BasicStrategy} = require('passport-http')

    passport.use(new BasicStrategy(getBasicAuthHandler(options.passport.credentials)))
  } else if (options.passport.strategy === 'JWT') {
    const JWTStrategy = require('@sap/xssec').JWTStrategy
    const xsenv = require('@sap/xsenv')

    passport.use(new JWTStrategy(xsenv.getServices({uaa: options.uaa}).uaa))
  } else {
    setImmediate(() => {
      throw new FeatureNotSupported(`Authentication strategy "${options.passport.strategy}" is not supported`)
    })
  }

  return passport
}

module.exports = {
  getPassport
}
