/**
 * Compare to objects on first level.
 * Returns a list of changes like {name: 'key', old: 'val', new: undefined}
 * @param {Object} oldData
 * @param {Object} newData
 * @returns {Array}
 */
const diff = (oldData = {}, newData = {}) => {
  const diffs = []

  // Check what has been removed or changed
  for (const key of Object.keys(oldData)) {
    if (!key.startsWith('*@odata.') && (!newData[key] || oldData[key] !== newData[key])) {
      diffs.push({name: key, old: oldData[key], new: newData[key]})
    }
  }

  // Check what has been added
  for (const key of Object.keys(newData)) {
    if (!key.startsWith('*@odata.') && !oldData[key]) {
      diffs.push({name: key, old: oldData[key], new: newData[key]})
    }
  }

  return diffs
}

module.exports = diff
