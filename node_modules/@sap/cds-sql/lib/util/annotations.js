const {resolveDataType} = require('./dataTypes')
const ANNOTATIONS = ['@cds.on.insert', '@odata.on.insert', '@cds.on.update', '@odata.on.update']

const _getAnnotationName = (column) => {
  for (const annotation of ANNOTATIONS) {
    if (column[annotation]) {
      return annotation
    }
  }

  return undefined
}

const getAnnotatedColumns = (entityName, csn, options) => {
  if (!csn || !csn.definitions[entityName]) {
    return undefined
  }

  const insertAnnotatedColumns = new Map()
  const updateAnnotatedColumns = new Map()

  for (const key of Object.keys(csn.definitions[entityName].elements)) {
    const column = csn.definitions[entityName].elements[key]

    if (resolveDataType(column, csn, options)) {
      const annotation = _getAnnotationName(column)

      if (!annotation) {
        continue
      }

      const config = {symbol: (column[annotation]['='] || column[annotation]['#']).replace('$', ''), indexNo: column.indexNo}

      if (annotation.endsWith('.insert')) {
        insertAnnotatedColumns.set(key, config)
      } else {
        updateAnnotatedColumns.set(key, config)
      }
    }
  }

  return {
    insertAnnotatedColumns: insertAnnotatedColumns,
    updateAnnotatedColumns: updateAnnotatedColumns
  }
}

module.exports = {
  getAnnotatedColumns
}
