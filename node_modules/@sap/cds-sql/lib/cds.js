const _notInjected = () => {
  throw new Error('This method requires `cds` to be injected')
}

const _validateInjection = (cds) => {
  if (!cds || typeof cds !== 'object') {
    throw new Error('Injected value is not of type `cds`')
  }
}

const injection = {
  cds: {
    linked: (...args) => {
      const {linked} = require('@sap/cds-reflect')
      injection.cds.linked = linked
      return linked(...args)
    },
    reflect: (...args) => {
      const {reflect} = require('@sap/cds-reflect')
      injection.cds.reflect = reflect
      return reflect(...args)
    },
    parse: {
      cql: _notInjected
    },
    load: _notInjected
  },
  inject (cds) {
    _validateInjection(cds)

    injection.cds = cds
  },
  linked (...args) {
    return injection.cds.linked(...args)
  },
  reflect (...args) {
    return injection.cds.reflect(...args)
  },
  parse: {
    cql (arg) {
      return injection.cds.parse.cql(arg)
    }
  },
  load (...args) {
    return injection.cds.load(...args)
  },
  get config () {
    return injection.cds.config || {data: {}}
  }
}

module.exports = injection
